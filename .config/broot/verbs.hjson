###############################################################
# This file contains the verb definitions for broot
#
# Doc at https://dystroy.org/broot/verbs/
###############################################################
{

    verbs: [

        # Example 1: launching `tail -n` on the selected file (leaving broot)
        # {
        #     name: tail_lines
        #     invocation: tl {lines_count}
        #     execution: "tail -f -n {lines_count} {file}"
        # }

        # Example 2: creating a new file without leaving broot
        # {
        #     name: touch
        #     invocation: touch {new_file}
        #     execution: "touch {directory}/{new_file}"
        #     leave_broot: false
        # }

        # A standard recommended command for editing files, that you
        # can customize.
        # If $EDITOR isn't set on your computer, you should either set it using
        #  something similar to
        #   export EDITOR=nvim
        #  or just replace it with your editor of choice in the 'execution'
        #  pattern.
        #  If your editor is able to open a file on a specific line, use {line}
        #   so that you may jump directly at the right line from a preview.
        # Example:
        #  execution: nvim +{line} {file}
        {
            invocation: edit
            shortcut: e
            execution: "$EDITOR +{line} {file}"
            leave_broot: false
        }

        # A convenient shortcut to create new text files in
        # the current directory or below
        {
            invocation: create {subpath}
            execution: "$EDITOR {directory}/{subpath}"
            leave_broot: false
        }

        {
            invocation: git_diff
            shortcut: gd
            leave_broot: false
            execution: "git difftool -y {file}"
        }

        # On ctrl-b, propose the creation of a copy of the selection.
        # While this might occasionally be useful, this verb is mostly here
        # as an example to demonstrate rare standard groups like {file-stem}
        # and {file-dot-extension} and the auto_exec verb property which
        # allows verbs not executed until you hit enter
        {
            invocation: "backup {version}"
            key: ctrl-b
            leave_broot: false
            auto_exec: false
            execution: "cp -r {file} {parent}/{file-stem}-{version}{file-dot-extension}"
        }

        # This verb lets you launch a terminal on ctrl-T
        # (on exit you'll be back in broot)
        {
            invocation: terminal
            key: ctrl-t
            execution: "$SHELL"
            set_working_dir: true
            leave_broot: false
        }

        # Here's an example of a shortcut bringing you to your home directory
        # {
        #     invocation: home
        #     key: ctrl-home
        #     execution: ":focus ~"
        # }

        # A popular set of shortcuts for going up and down:
        #
        # {
        #     key: ctrl-k
        #     execution: ":line_up"
        # }
        # {
        #     key: ctrl-j
        #     execution: ":line_down"
        # }
        # {
        #     key: ctrl-u
        #     execution: ":page_up"
        # }
        # {
        #     key: ctrl-d
        #     execution: ":page_down"
        # }

        # If you develop using git, you might like to often switch
        # to the git status filter:
        # {
        #     key: ctrl-g
        #     execution: ":toggle_git_status"
        # }

        # You can reproduce the bindings of Norton Commander
        # on copying or moving to the other panel:
        # {
        #     key: F5
        #     external: "cp -r {file} {other-panel-directory}"
        #     leave_broot: false
        # }
        # {
        #     key: F6
        #     external: "mv {file} {other-panel-directory}"
        #     leave_broot: false
        # }
        {
            invocation: home
            key: ctrl-H
            internal: "focus ~"
        }

        {
            invocation: delete
            key: F8
            shortcut: rm
            external: rm -r {file}
            leave_broot: false
            auto_exec: false
        }
        {
            invocation: edit
            key: F4
            shortcut: e
            external: $EDITOR +{line} {file}
            leave_broot: false
        }
        {
            invocation: copy
            key: F5
            external: cp -r {file} {other-panel-directory}
            leave_broot: false
            auto_exec: false
        }
        {
            invocation: move
            key: F6
            external: mv {file} {other-panel-directory}
            leave_broot: false
            auto_exec: false
        }
        {
            invocation: create-directory {newdir}
            key: F7
            shortcut: md
            external: mkdir {directory}/{newdir}
            leave_broot: false
            auto_exec: false
        }
        {
            name: newfile
            key: shift-F4
            invocation: create-file {newname}
            external: "$EDITOR {directory}/{newname}"
            leave_broot: false
            auto_exec: false
        }
        {
            invocation: pack-file-or-directory
            key: ctrl-F5
            external: "tar -cvf {other-panel-directory}/{file-name}.zip {file}"
            leave_broot: false
            auto_exec: false
        }
        {
            invocation: archivemount
            shortcut: am
            external: "am.sh {file-name}"
            leave_broot: false
            auto_exec: true
            set_working_dir: true
            apply_to: file
        }
        {
            invocation: view-archivemount
            key: ctrl-shift-F5
            shortcut: vam
            auto_exec: true
            set_working_dir: true
            cmd: ":mkdir -p /tmp/{file-name};:am;:!focus /tmp/{file-name}.archivemount"
        }
        {
            invocation: sshfs {host}
            shortcut: ssh
            external: "sshfs {host}:/tmp/{host}.sshfs"
            leave_broot: false
            auto_exec: true
            set_working_dir: true
        }
        {
            invocation: view-sshfs {host}
            key: ctrl-shift-F7
            shortcut: vssh
            auto_exec: true
            set_working_dir: true
            cmd: ":mkdir -p /tmp/{host};:ssh {host};:!focus \"/tmp/{host}.sshfs\""
        }
        {
            invocation: locate {anyfile}
            key: ctrl-F7
            external: "$SHELL -c \"locate {anyfile} | fzf | xsel -b\""
            leave_broot: false
            auto_exec: false
        }
        {
            invocation: ccd-select
            shortcut: ccd-select
            external: "$SHELL -c \"tree -idf ~ | fzy -l 30 | xsel -i\""
            leave_broot: false
            auto_exec: true
        }
        {
            invocation: ccd
            shortcut: ccd
            key: ctrl-shift-F1
            cmd: ":ccd-select;:!focus $(xsel -o)"
            leave_broot: false
            auto_exec: false
            set_working_dir: true
        }
        {
            invocation: terminal
            key: ctrl-t
            execution: $SHELL
            set_working_dir: true
            leave_broot: false
        }
        {
            invocation: start-in-shell {arg}
            shortcut: sh
            key: F12
            external: "$SHELL -c \"{file-name} {arg};read;\""
            set_working_dir: true
            leave_broot: false
            auto_exec: false
        }
        {
            invocation: exec1-on-current-file {command}
            shortcut: exec1
            key: shift-F12
            external: "{command} {file}"
            leave_broot: false
            auto_exec: false
        }
        {
            invocation: exec2-on-both-panel-files {command}
            shortcut: exec2
            key: shift-F12
            external: "{command} {file} {other-panel-file}"
            leave_broot: false
            auto_exec: false
        }
        {
            invocation: new-terminal
            shortcut: bash
            key: shift-alt-t
            external: gnome-terminal
            set_working_dir: true
            leave_broot: false
            auto_exec: true
        }
        {
            invocation: new-terminal-on-file {cmd}
            shortcut: cmd
            key: shift-alt-t
            external: gnome-terminal -- {cmd} {file-name}
            set_working_dir: true
            leave_broot: false
            auto_exec: false
        }
        {
            invocation: webbrowser
            key: shift-F3
            shortcut: www
            external: w3m {file}
            leave_broot: false
        }
        {
            invocation: word-view
            key: ctrl-shift-F3
            shortcut: w
            external: $SHELL -c \docx2txt < {file} | less\
            leave_broot: false
        }
        {
            invocation: excel-view
            key: alt-shift-F3
            shortcut: x
            external: "$SHELL -c \"xlsx2csv -a -d tab {file} | less\""
            leave_broot: false
        }
        {
            invocation: openoffice-view
            key: alt-F3
            shortcut: libre
            external: "$SHELL -c \"odt2txt {file} | less\""
            leave_broot: false
        }
        {
            invocation: diff
            key: shift-F5
            shortcut: diff
            external: "$SHELL -c \"diff -ywl --color=always {file} {other-panel-file}; read;\""
            #from_shell: true
            leave_broot: false
        }
        {
            invocation: ddiff
            key: shift-F7
            shortcut: ddiff
            external: "$SHELL -c \"diff -rywl --color=always {directory} {other-panel-directory}; read;\""
            #from_shell: true
            leave_broot: false
        }
        {
            invocation: git_diff
            shortcut: gd
            external: git diff {file}
            leave_broot: false
        }
        {
            key: alt-shift-f
            internal: ":toggle_files"
        }
        # If $PAGER isn't set on your computer, you should either set it
        #  or just replace it with your viewer of choice in the 'execution'
        #  pattern.
        # Example:
        #  execution: less {file}
        {
            key: F3
            name: view
            invocation: view
            external: $PAGER {file}
            leave_broot: false
        }
        # If you uncomment the two next shortcuts, the left
        # and right arrow keys will be used to go to the parent
        # directory or to open a selected one:
        #
        {
            key: left
            internal: ":parent"
        }
        {
            key: right
            internal: ":focus"
        }
        # Another popular set of shorctuts for going up and down:
        #
        # {
        # key: ctrl-j
        # execution: :line_down
        #
        # {
        # key: ctrl-k
        # execution: :line_up
        #
        # {
        # key: ctrl-d
        # execution: :page_down
        #
        # {
        # key: ctrl-u
        # execution: :page_up

        # If you develop using git, you might like to often switch
        # to the git status filter:
        #
        {
            key: ctrl-y
            shortcut: y
            internal: ":toggle_stage"
            auto_exec: true
        }
    ]

}
